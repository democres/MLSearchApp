//
// AccountsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class HomeAPI {
    
    /**
     Get child wallet autofunding configuration.
     
     - parameter childId: (path) Pass the child_id in path
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func searchArticles(searchQuery: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ArticleResponse?, _ error: ErrorResponse?) -> Void)) {
        searchArticlesWithRequestBuilder(searchQuery: searchQuery).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error as? ErrorResponse)
            }
        }
    }

    /**
     Get child wallet autofunding configuration.
     - GET /parent_api/mobile/children/{child_id}/autofunding
     - Create child wallet autofunding job.
     - BASIC:
       - type: http
       - name: genUAuthToken
     - parameter childId: (path) Pass the child_id in path
     - returns: RequestBuilder<ChildAutofundingResponse>
     */
    open class func searchArticlesWithRequestBuilder(searchQuery: String) -> RequestBuilder<ArticleResponse> {
        var path = "sites/MLC/search"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = ["q":searchQuery]
        let url = URLComponents(string: URLString)
        let headers = [String: String]()
        
        let requestBuilder: RequestBuilder<ArticleResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headers)
    }
}
